version: 2.1

# yaml basic and advance: https://circleci.com/docs/2.0/writing-yaml/#section=configuration

# sharing data between jobs: https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs

base_environment: &base_environment
  IMAGE_NAME: shaungc/iriversland2-django

jobs:
  build:
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      <<: *base_environment
    working_directory: ~/app
    steps:
      - checkout # retrieves the code from GitHub
      - setup_remote_docker # sets up a remote, isolated environment for each build. This is required before you use any docker command inside a job step.
      - run: echo dummy
      # - run:
      #     name: Build Docker image
      #     command: |
      #       docker build -f prod.Dockerfile -t $IMAGE_NAME:latest .
      # - run:
      #     name: Push Docker Image
      #     command: |
      #       echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      #       docker tag $IMAGE_NAME:latest $IMAGE_NAME:$CIRCLE_SHA1
      #       docker push $IMAGE_NAME:latest
      #       docker push $IMAGE_NAME:$CIRCLE_SHA1
  
  deploy:
    docker:
      - image: hashicorp/terraform:light
    environment:
      <<: *base_environment
      TF_REMOTE_GIT_REPO: https://github.com/rivernews/terraform-provisioning.git
      TF_VAR_app_container_image_tag: bacb274958387223b5e7eb0c446dde39d7a82f80
      # TF_VAR_app_container_image_tag: ${CIRCLE_SHA1}
    working_directory: ~/terraform/terraform-provisioning # set default directory to cloned github repo directory
    steps:
      # - checkout # retrieves the code from GitHub
      - run:
          name: Fetch Terraform Code
          working_directory: ~/terraform
          command: |
            rm -rf terraform-provisioning # avoid git clone complaining directory already exists
            git clone ${TF_REMOTE_GIT_REPO} # tf image has no curl, so just use git
            ls -l
      - run:
          name: Initialize Terraform
          command: |
            ls -l
            chmod +x init-backend-cicd.sh
            sh ./init-backend-cicd.sh
            echo 'export TF_VAR_app_container_image_tag__test="${CIRCLE_SHA1}"' >> $BASH_ENV # not working!
            env
      - run:
          name: Plan Terraform
          command: |
            env
            terraform plan
            source $BASH_ENV
            env
      - run:
          name: Apply Terraform
          command: |
            terraform apply -auto-approve

# circleci doc: https://circleci.com/docs/2.0/workflows/#fan-outfan-in-workflow-example
workflows:
  version: 2
  build-master:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build