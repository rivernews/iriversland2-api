version: 2.1

# yaml basic and advance: https://circleci.com/docs/2.0/writing-yaml/#section=configuration

# sharing data between jobs: https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs

base_environment: &base_environment
  IMAGE_NAME: shaungc/iriversland2-django

jobs:
  build:
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      <<: *base_environment
    working_directory: ~/app
    steps:
      # - checkout # retrieves the code from GitHub
      # - setup_remote_docker # sets up a remote, isolated environment for each build. This is required before you use any docker command inside a job step.
      - run:
          name: Setup dynamic environment variables 
          # circleci dynammic env, see https://circleci.com/docs/2.0/env-vars/#interpolating-environment-variables-to-set-other-environment-variables
          # terraform env, see https://www.terraform.io/docs/configuration/variables.html#environment-variables
          command: |
            echo 'export TF_VAR_app_container_image="${IMAGE_NAME}"' >> $BASH_ENV
      # - run:
      #     name: Build Docker image
      #     command: |
      #       docker build -f prod.Dockerfile -t $IMAGE_NAME:latest .
      # - run:
      #     name: Push Docker Image
      #     command: |
      #       echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      #       docker tag $IMAGE_NAME:latest $IMAGE_NAME:$CIRCLE_SHA1
      #       docker push $IMAGE_NAME:latest
      #       docker push $IMAGE_NAME:$CIRCLE_SHA1
  
  deploy:
    docker:
      - image: hashicorp/terraform:light
    environment:
      <<: *base_environment
      TF_REMOTE_GIT_REPO: https://github.com/rivernews/terraform-provisioning.git
    # working_directory: ~/terraform
    working_directory: ~/terraform/terraform-provisioning
    steps:
      # - checkout # retrieves the code from GitHub
      - run:
          name: Fetch Terraform Code
          working_directory: ~/terraform
          command: |
            # curl -sL https://github.com/rivernews/terraform-provisioning/archive/master.tar.gz | tar xz
            rm -rf terraform-provisioning
            git clone ${TF_REMOTE_GIT_REPO}
            ls -l
      - run:
          name: Initialize Terraform
          command: |
            ls -l
            chmod +x init-backend-cicd.sh
            sh ./init-backend-cicd.sh
            echo 'export TF_VAR_app_container_image_tag="${CIRCLE_SHA1}"' >> $BASH_ENV
      - run:
          name: Plan Terraform
          command: |
            terraform plan

workflows:
  version: 2
  build-master:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build